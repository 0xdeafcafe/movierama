
%p
  = link_to new_movie_path do
    Add movie

- if @submitter
  %h2 Movies submitted by #{@submitter.name}
- else
  %h2 Movies

.mr-sorter
  Sort by
  = link_to('likers', by: 'likers')
  |
  = link_to('haters', by: 'haters')
  |
  = link_to('date', by: 'date')

- @movies.each do |movie|
  - movie = MovieDecorator.new(movie)
  .mr-movie
    %h3.mr-movie-title= movie.title
    %p
      Posted by
      = link_to movie.user.name, user_movies_path(movie.user.id)
      = time_ago_in_words(movie.created_at)
      ago
      %dt  Description
      %dd= movie.description
      %dt  Date
      %dd= movie.date
    .mr-movie-votes
      - if movie.has_votes?
        = pluralize(movie.count_likers, 'liker')
        |
        = pluralize(movie.count_haters, 'hater')
      - elsif can?(:vote, movie)
        Be the first to vote for this movie
      - else
        No votes yet
    - if current_user && can?(:vote, movie)
      .mr-movie-voting
        - if current_user.likes?(movie)
          = link_to movie_vote_path(movie), method: :delete do
            Unlike
        - elsif current_user.hates?(movie)
          = link_to movie_vote_path(movie), method: :delete do
            Unhate
        - else
          = link_to movie_vote_path(movie, t:'like'), method: :post do
            Like
          |
          = link_to movie_vote_path(movie, t:'hate'), method: :post do
            Hate
